<?php

class ModuleCGI extends Module
{
  private $def = array(
    'parser' => array('type' => 'loop', 'mandatory' => false, 'data' => array(
        'extension' => array('type' => 'loop', 'mandatory' => true, 'data' => 'str'),
        'handler' => array('type' => 'file', 'mandatory' => true) ) )
     );

  function __construct($name)
  {
    parent::__construct($name);
    if (self::$debug || $this->localdebug)
      $this->doDebug("ModuleCGI->__construct()", WADebug::SYSTEM);

    $this->base->config->addDef('virtualhosts/default/data', $this->def);
    $this->base->config->addDef('virtualhosts/virtualhost/data', $this->def);
  }

  public function start($protocol)
  {

    // Register hook to process requests
    $protocol->registerHook('header', $this->name, 'header');
    $protocol->registerHook('process', $this->name, 'process');
  }

  public function header($request, $response)
  {
    // we need the body only if we are going to interprete ourself

    $request->needbody = true;
  }

  public function process($request, $response)
  {
    if (self::$debug || $this->localdebug)
      $this->doDebug("ModuleCGI->process($request, $response)", WADebug::SYSTEM);

    if ($response->content)
      return;

    $parsers = $request->vhost->getEntry('parser');
    $ext = $request->getRequest('ext');
    $accept = false;
    foreach($parsers as $parser)
    {
      foreach($parser['extension'] as $lext)
      {
        if ($lext == $ext)
        {
          $handler = $parser['handler'];
          $accept = true;
          break;
        }
      }
      if ($accept)
        break;
    }
    if (!$accept)
      return;

    if (self::$debug || $this->localdebug)
      $this->doDebug("ModuleCGI: request accepted", WADebug::SYSTEM);

    // if ext is any parser, we execute, otherwise, nothing

    $env = array();
    $env["SERVER_SIGNATURE"] = "WAWAS/1.0.1 (Unix) PHP/5.3.8 - Server at ... Port ...";
    $env["SERVER_SOFTWARE"] = "WAWAS v1.0.1 - the WebAbility(r) Web and Application Server - (c)2012 Philippe Thomassigny";
    $hostnames = $request->vhost->getHostNames();
    $env["SERVER_NAME"] = $hostnames[0];
    $env["SERVER_ADDR"] = "127.0.0.1";
    $env["SERVER_PORT"] = "83";
    $env["SERVER_ADMIN"] = "info@webability.info";
    $env["SERVER_PROTOCOL"] = "HTTP/1.1";

    if (WADebug::getOSType() == WADebug::WINDOWS)
      $env["WINDIR"] = "C:\WINDOWS";

/*
REDIRECT_URL  /info.php
REQUEST_URI  /info.php
SCRIPT_NAME  /info.php
ORIG_PATH_TRANSLATED  /home/sites/base3/master/site/info.php
ORIG_PATH_INFO  /info.php
ORIG_SCRIPT_NAME  /php5/php
ORIG_SCRIPT_FILENAME  /usr/local/bin/php
*/

    $vhost = array();
    $droot = $request->vhost->getDocumentRoot();
    if (substr($droot, 0, 1) != '/')
    {
      $droot = getcwd() . '/' . $droot;
    }
    $vhost["DOCUMENT_ROOT"] = $droot;
    $vhost["SCRIPT_FILENAME"] = $droot . $request->getRequest('path');
    $vhost["QUERY_STRING"] = $request->getRequest('query');

    $vhost["HTTP_ACCEPT"] = "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*";
    $vhost["HTTP_ACCEPT_LANGUAGE"] = "es-mx";
    $vhost["HTTP_ACCEPT_ENCODING"] = "gzip, deflate";
    $vhost["HTTP_USER_AGENT"] = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)";
    $vhost["HTTP_HOST"] = "127.0.0.1";
    $vhost["HTTP_CONNECTION"] = "Keep-Alive";

    $vhost["GATEWAY_INTERFACE"] = "CGI/1.1";

    $vhost["REMOTE_HOST"] = "localhost";
    $vhost["REMOTE_ADDR"] = "127.0.0.1";
    $vhost["REMOTE_PORT"] = "345";

    $vhost["REQUEST_METHOD"] = $request->getHTTP('method');
    $vhost["REDIRECT_STATUS"] = "200";

    $vhost["PATH"] = "";
    $vhost["PATH_TRANSLATED"] = "";
    $vhost["PATH_INFO"] = "";

//    var_dump($vhost);

/*
_SERVER["PHP_SELF"] /info.php
*/




    foreach ($env as $name => $value)
      putenv($name."=".$value);
    foreach ($vhost as $name => $value)
      putenv($name."=".$value);

//var_dump($env);
//var_dump($vhost);

    $cookies = $request->getCookie();
    if ($cookies)
    {
//var_dump($request->cookies);
      $cookie = "";
      foreach ($cookies as $name => $value)
        $cookie .= ($cookie?"; ":"").$name."=".$value;
      putenv("HTTP_COOKIE=".$cookie);
    }

    if ($request->rawbody)
    {
      putenv("CONTENT_TYPE=".$request->getHeader("content-type"));
      putenv("CONTENT_LENGTH=".($request->getHeader("content-length")));
    }

    $pipes = null;
    $espec_descriptor = array(0 => array("pipe", "r"), 1 => array("pipe", "w"));
    $proceso = proc_open('/usr/bin/php-cgi', $espec_descriptor, $pipes);

//var_dump($pipes);
//var_dump($proceso);

    if ($request->rawbody)
    {
      fwrite($pipes[0], $request->rawbody);
    }
    fclose($pipes[0]);

    // 1. read headers
    $lastread = null;

    while ($lastread != "\r\n" && $lastread != "\n" && $lastread != "\r")
    {
      if (!$lastread=fgets($pipes[1], 8192))
        break;
      $headers[] = trim($lastread);
      if (feof($pipes[1]))
      {
        break;
      }
    }

    // 2. read content
    $result = "";
    while (!feof($pipes[1]))
    {

// We should PASS THROUGH WITHOUT LOCAL CACHE; TO SAVE MEMORY


      $result .= fread($pipes[1], 8196);
    }

    fclose($pipes[1]);

    proc_close($proceso);

    // 3. parse headers
// var_dump($headers);
    foreach ($headers as $h)
    {
      $param = strtolower(trim(strtok($h, ":")));
      $data = trim(strtok(""));
//      if ($param != 'set-cookie')
        $response->setHeader($param, $data);
//      else
//        $response->setCookie('', $data);
    }

    $response->content = true;
    $response->setBody($result);
    $response->setHeader('content-length', $response->getBodyLength());

    return $response;
  }
}

?>