<?php

namespace modules;

class ModulePHP extends Module
{
  private $filename;

  function __construct($config)
  {
    parent::__construct($config);
    
    // Register hook to process requests
//    $protocol->registerHook('process', $this->name, "process");
  }

  public function process($context) //$host, $request, $response)
  {
    $this->hits++;
    $host = $context->host;
    
    // check si tenemos un match para ejecutar este modulo
    $basedir = $host->documentroot;
    $path = $context->request->http['path'];

    $found = false;
    if (is_file($basedir . $path))
    {
      if (substr($path, -4) == '.php')
      {
        $filename = $basedir . $path;
        $found = true;
      }
    }
    
    if (!$found)
      return false;

    $dirname = substr($filename, 0, strrpos($filename, '/'));
    $filename = substr($filename, strrpos($filename, '/') + 1);
    print $filename . PHP_EOL;
    print $dirname . PHP_EOL;
    $actualdir = getcwd();
    chdir($dirname);

    ob_start();
    require $filename;
    $res = ob_get_contents();
    ob_end_clean();
    chdir($actualdir);

    $context->response->body = $res;
    $context->response->setHeader('Date', date ("r", filemtime($filename)));
    $context->response->setHeader('Content-Length', strlen($context->response->body));
    
    return true;
  }

}

?>