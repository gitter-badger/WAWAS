<?php

namespace server;

// ========================================================
// CLASE PRINCIPAL DEL SERVIDOR
// ========================================================

class Listener
{
  public $name;
  private $ip;
  private $port;
  private $maxconnections;
  private $bufferlength;
  private $protocol;
  
  private $socket = null;
  
  public function __construct($localconfig, $default)
  {
    $this->name = $localconfig->name;
    $this->ip = $localconfig->ip?:$default->ip;
    $this->port = $localconfig->port?:$default->port;
    $this->maxconnections = $localconfig->maxconnections?:$default->maxconnections;
    $this->bufferlength = $localconfig->bufferlength?:$default->bufferlength;
    $this->protocol = $localconfig->protocol?:$default->protocol;
  }
  
  public function start()
  {
    // Crear socket TCP
    if (($this->socket = socket_create(AF_INET, SOCK_STREAM, 0)) < 0)
      return false; // error
    
    // Aseguramos que se pueda reusar el par IP/puerto aún no cerrado por OS
    socket_set_option($this->socket, SOL_SOCKET, SO_REUSEADDR, 1);

    // Ligar el socket
    if (!socket_bind($this->socket, $this->ip, $this->port))
      return false; // error

    // Escuchamos el socket
    if (socket_listen($this->socket) < 0)
      return false; // error

    // Nuestro socket no debe bloquear
    socket_set_nonblock($this->socket);
    
    return true;
  }
  
  public function stop()
  {
    // Cierra el socket principal
    socket_shutdown($this->socket);
    socket_close($this->socket);
    $this->socket = null;
  }
  
  public function getSocket()
  {
    return $this->socket;
  }
  
  public function getProtocol()
  {
    return $this->protocol;
  }

  public function getName()
  {
    return $this->name;
  }
  
  public function getPort()
  {
    return $this->port;
  }
}

?>